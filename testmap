import urllib.parse
import webbrowser
import requests


map_api = "https://www.developer.nrel.gov/api/alt-fuel-stations/v1/nearest.format?parameters"
evkey = "b8OUe9tgtqpB8GKogYA1xhpjlb6G37UgAF6DNNsG"


while True:
    orig = input("Starting Location: ")
    if orig == "quit" or orig == "q":
        break
    dest = input("Destination: ")
    if dest == "quit" or dest == "q":
        break
 
    fuel_type = input("Enter fuel type: ")
    if fuel_type != ('BD', 'CNG', 'ELEC', 'E85', 'HY', 'LNG', 'LPG'):
        print ("NO VALID FUEL TYPE SELECTED")
        break

    charg_type = input("Enter your charger type: ")
    if charg_type != ('NEMA1450', 'NEMA515', 'NEMA520', 'J1772', 'J1772COMBO', 'CHADEMO', 'TESLA'):
        print ("NO VALID CHARGER SELECTED")
        break        
 #if fuel and charge dont match program will display message and force quit

    map_url = map_api + urllib.parse.urlencode({"api_key":evkey, "fuel":fuel_type, "ev_connectors":charg_type, "start":orig, "end":dest})
        #map url format can be adjusted to display other values, orig and dest pulled from ln 11&14. fuel_type and charg_type from lines 19&24
    print("Map: " + (map_url))
    #this while true is used to set the parameters and display the map
    get_url = webbrowser.open(map_url) #this line is used to auto open the URL for the map

    if json_status == 0:
      print("API Staus: " + str(json_status) + " = A successful route call.\n")
      print("============================================")
      print("Directions from " + (orig) + " to " +(dest))
      print("Trip Duration:   " + (json_data["route"]["formattedTime"]))
      print("Miles:           " + str("{:.2f}".format(json_data["route"]["distance"])))
      print("Fuel Used (Gal): " + str("{:.2f}".format(json_data["route"]["fuelUsed"])))
      print("============================================")
      for each in json_data["route"]["legs"][0]["maneuvers"]:
          print((each["narrative"]) + " (" + str("{:.2f}".format ((each["distance"])) + " mi)"))
      print("============================================\n")
    elif json_status == 402:
        print("********************************************")
        print("Status Code: " + str(json_status) + "; Invalid User inputs for one or both locations.")
        print("********************************************\n") 
    elif json_status == 611:
        print("********************************************")
        print("Status Code: " + str(json_status) + "; Missing an entry for one or both locations.")
        print("********************************************\n") 
    else:
        print("**************************************************************************") 
        print("For status code: " + str(json_status) + "; Refer to:")
        print("https://developer.mapquest.com/documentation/directions-api/status-codes")
        print("**************************************************************************\n")